name: EPunla Query

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  IMAGE_NAME: registry.heroku.com/epunla-query-api/web:latest
  APP_NAME: epunla-query-api

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      # Build Docker image
      - name: Docker Login
        run: docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com

      - name: Build image
        run: docker build --file Dockerfile.query --tag $IMAGE_NAME .

      - name: Heroku Container Login
        run: heroku container:login

      - name: Push
        run: docker push $IMAGE_NAME

      - name: Release
        run: heroku container:release web -a $APP_NAME

      # PUSH IMAGE TO DOCKER
      # - name: Log into registry
      #   run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      # - name: Push image
      #   run: |
      #     IMAGE_ID=${{ secrets.DOCKER_USER }}/$IMAGE_NAME

      #     # Change all uppercase to lowercase
      #     IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

      #     # Strip git ref prefix from version
      #     VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

      #     # Strip "v" prefix from tag name
      #     [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

      #     # Use Docker `latest` tag convention
      #     [ "$VERSION" == "master" ] && VERSION=latest

      #     echo IMAGE_ID=$IMAGE_ID
      #     echo VERSION=$VERSION

      #     docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
      #     docker push $IMAGE_ID:$VERSION
